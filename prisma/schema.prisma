generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("POSTGRES_PRISMA_URL")
  directUrl         = env("POSTGRES_URL_NON_POOLING")
  shadowDatabaseUrl = env("POSTGRES_URL_NON_POOLING")
}

model User {
  id               Int           @id @default(autoincrement())
  kindeId          String        @unique
  email            String        @unique
  firstName        String
  lastName         String
  avatarUrl        String?
  role             Role          @default(USER)
  managedCompanies Company[]
  Application      Application[]
}

enum Role {
  USER
  EMPLOYER
  ADMIN
}

model JobOffer {
  id                Int             @id @default(autoincrement())
  title             String
  description       String
  createdAt         DateTime        @default(now())
  updatedAt         DateTime        @updatedAt
  salaryMin         Int
  salaryMax         Int
  companyId         Int
  cityId            Int
  categoryId        Int
  technologyId      Int
  contractTypeId    Int
  experienceLevelId Int
  Company           Company         @relation(fields: [companyId], references: [id])
  City              City            @relation(fields: [cityId], references: [id])
  Category          Category        @relation(fields: [categoryId], references: [id])
  ContractType      ContractType    @relation(fields: [contractTypeId], references: [id])
  ExperienceLevel   ExperienceLevel @relation(fields: [experienceLevelId], references: [id])
  // TODO: Should be Technology[], allow multiple technologies
  Technology        Technology      @relation(fields: [technologyId], references: [id])
  Application       Application[]
}

model Company {
  id          Int        @id @default(autoincrement())
  name        String
  description String?
  logoUrl     String?
  JobOffers   JobOffer[]
  User        User[]
}

model City {
  id        Int        @id @default(autoincrement())
  name      String
  JobOffers JobOffer[]
}

model Category {
  id        Int        @id @default(autoincrement())
  name      String
  JobOffers JobOffer[]
}

model Technology {
  id        Int        @id @default(autoincrement())
  name      String
  JobOffers JobOffer[]
}

model ContractType {
  id        Int        @id @default(autoincrement())
  name      String
  JobOffers JobOffer[]
}

model ExperienceLevel {
  id        Int        @id @default(autoincrement())
  name      String
  JobOffers JobOffer[]
}

model ApplicationStatus {
  id          Int           @id @default(autoincrement())
  name        String
  Application Application[]
}

model Application {
  id                  Int                @id @default(autoincrement())
  createdAt           DateTime           @default(now())
  updatedAt           DateTime           @updatedAt
  fullName            String
  email               String
  phone               String
  cvUrl               String
  description         String?
  User                User               @relation(fields: [userId], references: [id])
  userId              Int
  ApplicationStatus   ApplicationStatus? @relation(fields: [applicationStatusId], references: [id])
  applicationStatusId Int?
  JobOffer            JobOffer           @relation(fields: [jobOfferId], references: [id])
  jobOfferId          Int
}
